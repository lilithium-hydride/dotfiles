# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
#set $term kitty -1
set $term footclient
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu wofi --term kitty --allow-images --insensitive --gtk-dark --fork --show drun | xargs swaymsg exec --
#set $menu BEMENU_BACKEND=wayland bemenu-run -i -l 20 -P '>' | xargs swaymsg exec --
set $menu rofi -show drun -theme base16-dracula | xargs swaymsg exec --

set $locker swaylock -e -f -i ~/Pictures/Wallpapers/Allure.png -s tile --inside-color 282a36cc --inside-clear-color ffffa5cc --inside-ver-color d6acffcc --inside-wrong-color ff6e6ecc --key-hl-color 8be9fd --layout-border-color 00000000 --layout-bg-color 282a36cc --layout-text-color f8f8f2 --line-color 00000000 --line-clear-color 00000000 --line-caps-lock-color 00000000 --line-ver-color 00000000 --line-wrong-color 00000000 --ring-color f8f8f2cc --ring-clear-color ffffa5cc --ring-ver-color d6acffcc --ring-wrong-color ff6e6ecc --separator-color 282a36cc --text-color f8f8f2 --text-clear-color 282a36 --text-ver-color  282a36 --text-wrong-color 282a36

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/Wallpapers/Allure.png fill
#
# Example configuration:
#
#	output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output eDP-1 position 0,0
#output HDMI-A-2 position 2560,816

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#		   timeout 300 'swaylock -f -c 000000' \
#		   timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#		   before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#exec_always if pgrep swayidle > /tmp/swayidletest; then echo swayidle_already_running; else swayidle -w timeout 1200 'swaylock -e -f -i ~/Pictures/Wallpapers/Allure.png -s tile --inside-color 282a36cc --inside-clear-color ffffa5cc --inside-ver-color d6acffcc --inside-wrong-color ff6e6ecc --key-hl-color 8be9fd --layout-border-color 00000000 --layout-bg-color 282a36cc --layout-text-color f8f8f2 --line-color 00000000 --line-clear-color 00000000 --line-caps-lock-color 00000000 --line-ver-color 00000000 --line-wrong-color 00000000 --ring-color f8f8f2cc --ring-clear-color ffffa5cc --ring-ver-color d6acffcc --ring-wrong-color ff6e6ecc --separator-color 282a36cc --text-color f8f8f2 --text-clear-color 282a36 --text-ver-color  282a36 --text-wrong-color 282a36' timeout 1500 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' before-sleep 'swaylock -e -f -i ~/Pictures/Wallpapers/Allure.png -s tile --inside-color 282a36cc --inside-clear-color ffffa5cc --inside-ver-color d6acffcc --inside-wrong-color ff6e6ecc --key-hl-color 8be9fd --layout-border-color 00000000 --layout-bg-color 282a36cc --layout-text-color f8f8f2 --line-color 00000000 --line-clear-color 00000000 --line-caps-lock-color 00000000 --line-ver-color 00000000 --line-wrong-color 00000000 --ring-color f8f8f2cc --ring-clear-color ffffa5cc --ring-ver-color d6acffcc --ring-wrong-color ff6e6ecc --separator-color 282a36cc --text-color f8f8f2 --text-clear-color 282a36 --text-ver-color  282a36 --text-wrong-color 282a36'; fi
#
exec swayidle -w timeout 300 '$locker' timeout 1500 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' before-sleep '$locker' after-resume 'waybar'

#exec_always ~/.config/sway/swayidle

### Appearance

# Window border
default_border pixel 2

# Gaps between containers
gaps inner 10
#gaps outer 0

# Gaps between screen edges and containers
#gaps left 5
#gaps right 5
#gaps top 8
#gaps bottom 5
#gaps vertical 5
#gaps horizontal 5

# Only create gaps if there's >1 container
smart_gaps false





### Input configuration
#
# Example configuration:
#
#	input "2:14:SynPS/2_Synaptics_TouchPad" {
#		dwt enabled
#		tap enabled
#		natural_scroll enabled
#		middle_emulation enabled
#	}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "1133:49291:Logitech_G502_HERO_Gaming_Mouse" {
	accel_profile "flat"
	pointer_accel -0.5
}

input "2:7:SynPS/2_Synaptics_TouchPad" {
	tap enabled
	natural_scroll enabled
	dwt enabled
}

input type:mouse {
	accel_profile "flat"
	pointer_accel 0
}

input type:touchpad {
	tap enabled
	natural_scroll enabled
	dwt enabled
}

input type:pointer {
	tap enabled
	natural_scroll enabled
	dwt enabled
}

### Key bindings

#
# Basics:
#
	# Media
	bindsym --locked XF86AudioRaiseVolume exec amixer -c 0 set Master 1%+
	bindsym --locked XF86AudioLowerVolume exec amixer -c 0 set Master 1%-
	bindsym --locked XF86AudioMute		  exec amixer -c 0 set Master toggle
	bindsym --locked XF86AudioPlay		  exec playerctl play-pause
	bindsym --locked XF86AudioNext		  exec playerctl next
	bindsym --locked XF86AudioPrev		  exec playerctl previous
	bindsym --locked XF86AudioStop		  exec playerctl stop

	#bindsym XF86AudioRaiseVolume exec amixer -c 0 set Master 1%+
	#bindsym XF86AudioLowerVolume exec amixer -c 0 set Master 1%-
	#bindsym XF86AudioMute		  exec amixer -c 0 set Master toggle
	#bindsym XF86AudioPlay		  exec playerctl play-pause
	#bindsym XF86AudioNext		  exec playerctl next
	#bindsym XF86AudioPrev		  exec playerctl previous
	#bindsym XF86AudioStop		  exec playerctl stop


	# Show clipboard manager
	bindsym $mod+Control+v exec copyq toggle

	# Screenshot and markup
	bindsym $mod+Shift+s exec grim -g "$(slurp)" - | swappy -f -

	# Start file browser
	bindsym $mod+e exec pcmanfm-qt

	# Start a terminal
	bindsym $mod+Return exec $term
	bindsym Control+Alt+t exec $term

	# Kill focused window
	bindsym $mod+Shift+c kill

	# Start your launcher
	bindsym --release Super_L exec $menu

	# Drag floating windows by holding down $mod and left mouse button.
	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	floating_modifier $mod normal

	# Lock the screen
	bindsym $mod+Control+l exec $locker
	bindsym $mod+l exec $locker

	# Reload the configuration file
	bindsym $mod+Control+r reload

	# Exit sway (logs you out of your Wayland session)
	bindsym $mod+Control+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
	# Move your focus around
	#bindsym $mod+$left focus left
	#bindsym $mod+$down focus down
	#bindsym $mod+$up focus up
	#bindsym $mod+$right focus right
	# Or use $mod+[up|down|left|right]
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right

	# Move the focused window with the same, but add Shift
	bindsym $mod+Shift+$left move left
	bindsym $mod+Shift+$down move down
	bindsym $mod+Shift+$up move up
	bindsym $mod+Shift+$right move right
	# Ditto, with arrow keys
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right

#
# Workspaces:
#

	#set $output-primary DP-3
	#set $output-secondary HDMI-A-2

	#workspace 1 output $output-primary
	#workspace 2 output $output-primary
	#workspace 3 output $output-primary
	#workspace 4 output $output-primary
	#workspace 5 output $output-primary
	#workspace 6 output $output-primary
	#workspace 7 output $output-primary
	#workspace 8 output $output-primary
	#workspace 9 output $output-primary
	#workspace 10 output $output-primary

	#workspace 1b output $output-secondary
	#workspace 2b output $output-secondary
	#workspace 3b output $output-secondary
	#workspace 4b output $output-secondary
	#workspace 5b output $output-secondary
	#workspace 6b output $output-secondary
	#workspace 7b output $output-secondary
	#workspace 8b output $output-secondary
	#workspace 9b output $output-secondary
	#workspace 10b output $output-secondary


	# Switch to workspace
	#bindsym $mod+1 workspace number 1
	#bindsym $mod+2 workspace number 2
	#bindsym $mod+3 workspace number 3
	#bindsym $mod+4 workspace number 4
	#bindsym $mod+5 workspace number 5
	#bindsym $mod+6 workspace number 6
	#bindsym $mod+7 workspace number 7
	#bindsym $mod+8 workspace number 8
	#bindsym $mod+9 workspace number 9
	#bindsym $mod+0 workspace number 10
	# Move focused container to workspace
	#bindsym $mod+Shift+1 move container to workspace number 1
	#bindsym $mod+Shift+2 move container to workspace number 2
	#bindsym $mod+Shift+3 move container to workspace number 3
	#bindsym $mod+Shift+4 move container to workspace number 4
	#bindsym $mod+Shift+5 move container to workspace number 5
	#bindsym $mod+Shift+6 move container to workspace number 6
	#bindsym $mod+Shift+7 move container to workspace number 7
	#bindsym $mod+Shift+8 move container to workspace number 8
	#bindsym $mod+Shift+9 move container to workspace number 9
	#bindsym $mod+Shift+0 move container to workspace number 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.
	#
#
# Layout stuff:
#
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	bindsym $mod+b splith
	bindsym $mod+v splitv

	# Switch the current container between different layout styles
	bindsym $mod+s layout stacking
	bindsym $mod+w layout tabbed
	bindsym $mod+d layout toggle split

	# Make the current focus fullscreen
	bindsym $mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	bindsym $mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	bindsym $mod+space focus mode_toggle

	# Move focus to the parent container
	bindsym $mod+a focus parent

#
# Scratchpad:
#
	# Sway has a "scratchpad", which is a bag of holding for windows.
	# You can send windows there and get them back later.

	# Move the currently focused window to the scratchpad
	bindsym $mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	bindsym $mod+minus scratchpad show


#
# Resizing containers:
#
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {

	swaybar_command waybar

	position top

	# When the status_command prints a new line to stdout, swaybar updates.
	# The default just shows the current date and time.
	#status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

	#colors {
	#	 statusline #ffffff
	#	 background #323232
	#	 inactive_workspace #32323200 #32323200 #5c5c5c
	#}
}

#
# Window Rules
#

for_window [app_id="copyq"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="pavucontrol-qt"] floating enable
for_window [title="Picture in picture"] floating enable


#
# Theming
#

include colorscheme


#
# Autostarts
#

#exec_always dunst
#exec_always pipewire-pulse
#exec pipewire-media-session

# Start user dbus session for mako. playerctld must be started after the last dbus
# is created, and others may also require this.
#exec -- dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus && mako && playerctld daemon && copyq --start-server enable 
exec mako 
#exec playerctld daemon
exec -- copyq --start-server enable 
#exec_always mako
#exec_always playerctld daemon
#exec_always -- copyq --start-server enable
exec_always pipewire
exec_always -- foot -s

include /etc/sway/config.d/*
include ~/.config/sway/config.d/*.conf
